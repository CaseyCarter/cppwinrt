#include <sdkddkver.h>

import "oaidl.idl";
import "ocidl.idl";

import "windows.foundation.idl";

namespace Modern.Test
{
[contract(Windows.Foundation.UniversalApiContract, 1)]
typedef struct Struct1
{
    UINT32 BytesRetrieved;
} Struct1;


// The purpose of the test is to make sure that all implicit interfaces are generated properly for the case where
// a generic interface has a parameter that happens to be a runtimeclass which happens
// to have a default interface which happens to be a generic interface which happens
// to be one of the ones where we generate implicit generic interfaces

runtimeclass Bar1;

[uuid(1C6CD845-C9E7-45F5-947D-9CFADD47A1B1)]
[contract(Windows.Foundation.UniversalApiContract, 1)]
interface IFoo2 : IInspectable
{
    HRESULT Do(Windows.Foundation.Collections.IIterator<Bar1>* col);
}

[activatable(Windows.Foundation.UniversalApiContract, 1)]
[contract(Windows.Foundation.UniversalApiContract, 1)]
runtimeclass Bar1
{
    [default] interface Windows.Foundation.Collections.IVector<Struct1>;
}

}